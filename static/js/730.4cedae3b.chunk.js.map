{"version":3,"file":"static/js/730.4cedae3b.chunk.js","mappings":"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","sources":["BeerItem/BeerItem.styled.js","../node_modules/nanoid/index.browser.js","BeerItem/BeerItem.jsx","store.js"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const BeerPage = styled.div`\r\n  margin: 0 20px;\r\n  p {\r\n    font-size: large;\r\n    font-weight: 500;\r\n  }\r\n  tbody {\r\n    display: flex;\r\n  }\r\n  tr {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-wrap: wrap;\r\n  }\r\n  td {\r\n    border: 1px dashed black;\r\n  }\r\n  .contributedBy {\r\n    text-align: center;\r\n  }\r\n  .foodPairing {\r\n    display: flex;\r\n    flex-direction: column;\r\n    p {\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n  img {\r\n    margin-top: 30px;\r\n  }\r\n`;\r\n\r\nexport const MainInfo = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  gap: 5px;\r\n  .mainInfo {\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding-top: 30px;\r\n  }\r\n\r\n  h2 {\r\n    margin-top: 0;\r\n  }\r\n\r\n  h3 {\r\n    margin-top: 0;\r\n    text-align: center;\r\n  }\r\n  p {\r\n    width: 200px;\r\n  }\r\n  span {\r\n    font-size: large;\r\n    font-weight: 500;\r\n  }\r\n`;\r\n\r\nexport const IngredientsGroup = styled.div`\r\n  padding-top: 30px;\r\n  .ingredientsInfo {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  .ingredientGroup {\r\n    text-align: center;\r\n  }\r\n\r\n  .ingredient {\r\n    &::before {\r\n      content: \"\";\r\n      display: inline-block;\r\n      align-self: center;\r\n      width: 14px;\r\n      height: 14px;\r\n\r\n      background-color: aquamarine;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MethodInfo = styled.div`\r\n  padding-top: 30px;\r\n\r\n  .methodInfo {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n\r\n    p {\r\n      &::before {\r\n        content: \"\";\r\n        display: inline-block;\r\n        align-self: center;\r\n        width: 14px;\r\n        height: 14px;\r\n\r\n        background-color: aquamarine;\r\n      }\r\n    }\r\n  }\r\n  .ingredientGroup {\r\n    text-align: center;\r\n  }\r\n`;\r\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import axios from \"axios\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useBeerStore from \"../store\";\r\nimport {\r\n  BeerPage,\r\n  IngredientsGroup,\r\n  MainInfo,\r\n  MethodInfo,\r\n} from \"./BeerItem.styled\";\r\n\r\nimport { nanoid } from \"nanoid\";\r\n\r\nconst BeerItem = () => {\r\n  const { itemId } = useParams();\r\n\r\n  const { beer, setBeer } = useBeerStore();\r\n\r\n  useEffect(() => {\r\n    const fetchRecipe = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `https://api.punkapi.com/v2/beers/${itemId}`\r\n        );\r\n        const data = await response.data;\r\n        setBeer(data);\r\n      } catch (err) {\r\n        throw new Error(err.message);\r\n      }\r\n    };\r\n    fetchRecipe();\r\n  }, [itemId]);\r\n\r\n  return (\r\n    <BeerPage>\r\n      {beer.map((beer) => (\r\n        <div key={beer.id}>\r\n          <MainInfo>\r\n            <img src={beer.image_url} alt={beer.tagline} height=\"500px\" />\r\n            <div className=\"mainInfo\">\r\n              <h2>{beer.name}</h2>\r\n              <p>{beer.description}</p>\r\n              <table>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>First brewed</td>\r\n                    <td>Alcohol by volume</td>\r\n                    <td>International Bitterness Units</td>\r\n                    <td>Target Final Gravity</td>\r\n                    <td>Target Original Gravity</td>\r\n                    <td>European Brewery Convention</td>\r\n                    <td>Standard Reference Method</td>\r\n                    <td>pH</td>\r\n                    <td>Attenuation Level</td>\r\n                    <td>Volume</td>\r\n                    <td>Boil volume</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>{beer.first_brewed}</td>\r\n                    <td>{beer.abv}</td>\r\n                    <td>{beer.ibu}</td>\r\n                    <td>{beer.target_fg}</td>\r\n                    <td>{beer.target_og}</td>\r\n                    <td>{beer.ebc}</td>\r\n                    <td>{beer.srm}</td>\r\n                    <td>{beer.ph}</td>\r\n                    <td>{beer.attenuation_level}</td>\r\n                    <td>\r\n                      {beer.volume.value} {beer.volume.unit}\r\n                    </td>\r\n                    <td>\r\n                      {beer.boil_volume.value} {beer.boil_volume.unit}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <IngredientsGroup>\r\n              <h3>Ingredients</h3>\r\n              <div className=\"ingredientsInfo\">\r\n                <div>\r\n                  <p className=\"ingredientGroup\">Hops</p>\r\n                  {beer.ingredients.hops.map((item) => (\r\n                    <p key={nanoid()} className=\"ingredient\">\r\n                      {item.name} - {item.amount.value} {item.amount.unit}{\" \"}\r\n                      {item.add} {item.attribute}\r\n                    </p>\r\n                  ))}\r\n                </div>\r\n\r\n                <div>\r\n                  <p className=\"ingredientGroup\">Malt</p>\r\n                  {beer.ingredients.malt.map((item) => (\r\n                    <p key={nanoid()} className=\"ingredient\">\r\n                      {item.name} - {item.amount.value} {item.amount.unit}\r\n                    </p>\r\n                  ))}\r\n                </div>\r\n\r\n                <div>\r\n                  <p className=\"ingredientGroup\">Yeast</p>\r\n                  <p className=\"ingredient\">{beer.ingredients.yeast}</p>\r\n                </div>\r\n              </div>\r\n            </IngredientsGroup>\r\n\r\n            <MethodInfo>\r\n              <h3>Method</h3>\r\n              <div className=\"methodInfo\">\r\n                <p>\r\n                  Fermentation temperature: {\"\"}\r\n                  {beer.method.fermentation.temp.value}{\" \"}\r\n                  {beer.method.fermentation.temp.unit}\r\n                </p>\r\n                {beer.method.twist !== null ? (\r\n                  <p>Twist: {beer.method.twist}</p>\r\n                ) : null}\r\n                {beer.method.mash_temp.map((item) =>\r\n                  item.duration !== null ? (\r\n                    <p key={nanoid()}>\r\n                      Mash temperature | duration: {\"\"}\r\n                      {item.temp.value} {item.temp.unit} | {item.duration}\r\n                    </p>\r\n                  ) : null\r\n                )}\r\n                <div>\r\n                  <p>\r\n                    Brewer Tips: {beer.brewers_tips}\r\n                  </p>\r\n\r\n                  <div className=\"foodPairing\">\r\n                    <p>Food Pairing:</p>\r\n                    {beer.food_pairing.map((item) => (\r\n                      <span key={nanoid()}>{item}</span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </MethodInfo>\r\n          </MainInfo>\r\n          <p className=\"contributedBy\">Contributed by: {beer.contributed_by}</p>\r\n        </div>\r\n      ))}\r\n    </BeerPage>\r\n  );\r\n};\r\n\r\nexport default BeerItem;\r\n","import axios from \"axios\";\r\nimport { create } from \"zustand\";\r\nimport { fetchRecipes } from \"./services/punkapi\";\r\n\r\nconst useBeerStore = create((set) => ({\r\n  beers: [],\r\n  beer: [],\r\n  selectedBeers: [],\r\n  page: 1,\r\n\r\n  setBeers: (recipes) => {\r\n    set(() => ({\r\n      beers: recipes,\r\n    }));\r\n  },\r\n\r\n  nextPage: () => {\r\n    set((state) => ({\r\n      page: state.page + 1,\r\n    }));\r\n  },\r\n\r\n  setBeer: (recipes) =>\r\n    set(() => ({\r\n      beer: recipes,\r\n    })),\r\n\r\n  toggleRecipeSelection: (recipe) =>\r\n    set((state) => {\r\n      const selectedBeers = state.selectedBeers.includes(recipe)\r\n        ? state.selectedBeers.filter(\r\n            (selectedRecipe) => selectedRecipe !== recipe\r\n          )\r\n        : [...state.selectedBeers, recipe];\r\n\r\n      return { selectedBeers };\r\n    }),\r\n\r\n  loadMoreRecipes: async (page) => {\r\n    const response = await axios.get(\r\n      `https://api.punkapi.com/v2/beers?page=${page}`\r\n    );\r\n    set(() => ({\r\n      beers: response.data,\r\n    }));\r\n  },\r\n\r\n  deleteSelectedRecipes: () => {\r\n    set((state) => {\r\n      const updatedRecipes = state.beers.filter(\r\n        (recipe) => !state.selectedBeers.includes(recipe)\r\n      );\r\n\r\n      const selectedBeers = [];\r\n\r\n      return { beers: updatedRecipes, selectedBeers };\r\n    });\r\n  },\r\n}));\r\n\r\nexport default useBeerStore;\r\n"],"names":["BeerPage","styled","div","_templateObject","_taggedTemplateLiteral","MainInfo","_templateObject2","IngredientsGroup","_templateObject3","MethodInfo","_templateObject4","nanoid","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","itemId","useParams","_useBeerStore","useBeerStore","beer","setBeer","useEffect","fetchRecipe","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_context","prev","next","axios","get","concat","sent","t0","Error","message","stop","apply","_jsx","children","map","_jsxs","src","image_url","alt","tagline","height","className","name","description","first_brewed","abv","ibu","target_fg","target_og","ebc","srm","ph","attenuation_level","volume","value","unit","boil_volume","ingredients","hops","item","amount","add","attribute","malt","yeast","method","fermentation","temp","twist","mash_temp","duration","brewers_tips","food_pairing","contributed_by","create","set","beers","selectedBeers","page","setBeers","recipes","nextPage","state","toggleRecipeSelection","recipe","includes","filter","selectedRecipe","_toConsumableArray","loadMoreRecipes","_loadMoreRecipes","_x","deleteSelectedRecipes"],"sourceRoot":""}